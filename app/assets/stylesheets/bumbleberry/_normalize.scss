//
//	This file is highly based off of normalize.css
//  https://github.com/necolas/normalize.css/
//

@if not $bumbleberry-no-markup {
	@if $font-loading-method == "all" or not does(namevalue-storage) {
		@each $font, $font-data in $fonts {
			@if map-get($font-data, auto_load) != 'n' {
				@include font($font);
			}
		}
	}

	html {
		background-color: $background-color;
		@include _(box-sizing, border-box);
		
		@if has_bug("text-size-adjust-after-orientation-change") {
			@include _(text-size-adjust, 100%);
		}
	}

	*, *:after, *:before {
		@include _(box-sizing, inherit);
	}

	body {
		@if has_bug("body-margin") {
			margin: 0;
		}
		@include font-family(primary);
	}

	$block_reset_elements: ();
	$inline_block_reset_elements: ();

	@if supports(html5) {
		@if not capable_of(html5) {
			$block_reset_elements: $block_reset_elements, article, aside, figcaption, figure, footer, header, hgroup, menu, nav, section;
			$inline_block_reset_elements: $inline_block_reset_elements, audio, canvas, progress, video;
		}
		@if has_bug("main-block-display") {
			$block_reset_elements: $block_reset_elements, main;
		}
		@if not capable_of(html5) or has_bug("summary-block-display") {
			$block_reset_elements: $block_reset_elements, details, summary;
		}
		@if has_bug("progress-vertical-alignment") {
			$inline_block_reset_elements: $inline_block_reset_elements, progress;
		}
	}

	@if length($block_reset_elements) > 0 {
		#{$block_reset_elements} {
			display: block;
		}
	}

	@if length($inline_block_reset_elements) > 0 {
		#{$inline_block_reset_elements} {
			display: inline-block;
			vertical-align: baseline;
		}
	}

	// 
	// Prevent modern browsers from displaying `audio` without controls.
	// Remove excess height in iOS 5 devices.
	// 

	@if does(audio) {
		audio:not([controls]) {
			display: none;

			@if has_bug(excess-height-on-audio-elements) {
				height: 0;
			}
		}
	}


	//
	// Address `[hidden]` styling not present in IE 8/9/10.
	// Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
	//

	$display_none_elements: ();

	@if does(address) and has_bug(address-styling) {
		$display_none_elements: $display_none_elements, '[hidden]'
	}
	@if does(template) and has_bug(template-visible) {
		$display_none_elements: $display_none_elements, template
	}

	@if length($display_none_elements) > 0 {
		#{$display_none_elements} {
			display: none;
		}
	}

	//
	// Remove the gray background color from active links in IE 10.
	//
	@if has_bug(active-list-background-color) {
		a {
			background-color: transparent;
		}
	}

	// 
	// Improve readability when focused and also mouse hovered in all browsers.
	// 

	@if has_bug(link-focus-outline) {
		a:active,
		a:hover {
		  outline: 0;
		}
	}

	// Text-level semantics
	//   ==========================================================================
	//
	// 
	// Address styling not present in IE 8/9/10/11, Safari, and Chrome.
	// 

	@if supports(abbr) and has_bug(abbr-title-border-missing) {
		abbr[title] {
		  border-bottom: 1px dotted;
		}
	}

	// 
	// Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
	// 

	@if has_bug(bolder-instead-of-bold) {
		b,
		strong {
		  font-weight: bold;
		}
	}

	// 
	// Address styling not present in Safari and Chrome.
	// 

	@if does(dfn) and has_bug(dfn-not-italic) {
		dfn {
		  font-style: italic;
		}
	}

	// 
	// Address variable `h1` font-size and margin within `section` and `article`
	// contexts in Firefox 4+, Safari, and Chrome.
	// 

	@if (supports(section) or supports(article)) and has_bug(h1-style-in-sections) {
		h1 {
		  font-size: 2em;
		  margin: 0.67em 0;
		}
	}

	// 
	// Address styling not present in IE 8/9.
	// 
	@if supports(mark) and has_bug(mark-styling-missing) {
		mark {
		  background: #ff0;
		  color: #000;
		}
	}

	// 
	// Address inconsistent and variable font size in all browsers.
	// 

	@if supports(small) and has_bug(small-size-not-80-percent) {
		small {
		  font-size: 80%;
		}
	}

	// 
	// Prevent `sub` and `sup` affecting `line-height` in all browsers.
	// 

	@if (supports(sub) or supports(sup)) and has_bug(sub-and-sup-line-height) {
		sub,
		sup {
		  font-size: 75%;
		  line-height: 0;
		  position: relative;
		  vertical-align: baseline;
		}

		sup {
		  top: -0.5em;
		}

		sub {
		  bottom: -0.25em;
		}
	}

	// Embedded content
	// ==========================================================================

	// 
	// Remove border when inside `a` element in IE 8/9/10.
	// 

	@if has_bug(img-has-border-in-links) {
		img {
		  border: 0;
		}
	}

	// 
	// Correct overflow not hidden in IE 9/10/11.
	// 

	@if does(svg) and has_bug(svg-overflow-visible) {
		svg:not(:root) {
		  overflow: hidden;
		}
	}

	@if does(svg) {
		svg[hidden] {
			display: none !important;
		}
	}

	// Grouping content
	// ==========================================================================

	// 
	// Address margin not present in IE 8/9 and Safari.
	// 

	@if does(figure) and has_bug(figure-margin-not-present) {
		figure {
		  margin: 1em 40px;
		}
	}

	// 
	// Address differences between Firefox and other browsers.
	// ** this comment sucks by the way **

	@if does(hr) and has_bug(hr-height-is-messed) {
		hr {
		  @include _(box-sizing, content-box);
		  height: 0;
		}
	}

	// 
	// Contain overflow in all browsers.
	// 

	@if does(pre) and has_bug(pre-overflow-not-auto) {
		pre {
		  overflow: auto;
		}
	}

	// 
	// Address odd `em`-unit font size rendering in all browsers.
	// 

	@if does(pre) or does(code) or does(kbd) or does(samp) {
		@if has_bug(code-font-not-ems-and-not-monospace) {
			code, kbd, pre, samp {
				@include font-family(monospace) { // use our monospace if we have it, otherwise use the default
					font-family: monospace, monospace; // why twice?
				}
				font-size: 1em;
			}
		} @elseif (has-font(monospace)) {
			code, kbd, pre, samp {
				@include font-family(monospace)
			}
		}
	}

	// Forms
	// ==========================================================================

	// 
	// Known limitation: by default, Chrome and Safari on OS X allow very limited
	// styling of `select`, unless a `border` property is set.
	// 

	// 
	// 1. Correct color not being inherited.
	//    Known issue: affects color of disabled elements.
	// 2. Correct font properties not being inherited.
	// 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
	// 

	$color-bug: has_bug(form-elements-not-inheriting-color);
	$font-bug: has_bug(form-elements-not-inheriting-font);
	$margin-bug: has_bug(form-elements-have-margin);

	@if $color-bug or $font-bug or $margin-bug {
		button, input, optgroup, select, textarea {
			@if $color-bug {  color: inherit; } // 1
			@if $font-bug {	  font: inherit; } // 2
			@if $margin-bug { margin: 0; } // 3
		}
	}

	// 
	// Address `overflow` set to `hidden` in IE 8/9/10/11.
	// 

	@if has_bug(button-overflow-hidden) {
		button {
		  overflow: visible;
		}
	}

	// 
	// Address inconsistent `text-transform` inheritance for `button` and `select`.
	// All other form control elements do not inherit `text-transform` values.
	// Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
	// Correct `select` style inheritance in Firefox.
	// 

	$text-transform-elements: ();

	@if has_bug(button-inherits-text-transform) { $text-transform-elements: $text-transform-elements, button; }
	@if has_bug(select-inherits-text-transform) { $text-transform-elements: $text-transform-elements, select; }

	@include for_all($text-transform-elements) {
		text-transform: none;
	}

	// 
	// 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
	//    and `video` controls.
	// 2. Correct inability to style clickable `input` types in iOS.
	// 3. Improve usability and consistency of cursor style between image-type
	//    `input` and others.
	// 

	@if has_bug(messed-audio-and-video-controls) {
		button,
		html input[type="button"], // 1
		input[type="reset"],
		input[type="submit"] {
			@include _(appearance, button); // 2
			cursor: pointer; // 3
		}
	}

	// 
	// Re-set default cursor for disabled elements.
	// 

	@if has_bug(disbabled-elements-cursor) {
		button[disabled],
		html input[disabled] {
		  cursor: default;
		}
	}

	// 
	// Remove inner padding and border in Firefox 4+.
	// 

	@if has_bug(mozilla-inner-padding-on-inputs) {
		button::-moz-focus-inner,
		input::-moz-focus-inner {
			border: 0;
			padding: 0;
		}
	}

	// 
	// Address Firefox 4+ setting `line-height` on `input` using `!important` in
	// the UA stylesheet.
	// 

	@if has_bug(input-has-important-line-height) {
		input {
			line-height: normal;
		}
	}

	//
	// It's recommended that you don't attempt to style these elements.
	// Firefox's implementation doesn't respect box-sizing, padding, or width.
	//
	// 1. Address box sizing set to `content-box` in IE 8/9/10.
	// 2. Remove excess padding in IE 8/9/10.
	//

	@if has_bug(radio-checkbox-padding-and-box-sizing) {
		input[type="checkbox"],
		input[type="radio"] {
			box-sizing: border-box; // 1
			padding: 0; // 2
		}
	}

	// 
	// Fix the cursor style for Chrome's increment/decrement buttons. For certain
	// `font-size` values of the `input`, it causes the cursor style of the
	// decrement button to change from `default` to `text`.
	// 

	@if has_bug(number-element-button-height) {
		input[type="number"]::-webkit-inner-spin-button,
		input[type="number"]::-webkit-outer-spin-button {
			height: auto;
		}
	}

	// 
	// 1. Address `appearance` set to `searchfield` in Safari and Chrome.
	// 2. Address `box-sizing` set to `border-box` in Safari and Chrome
	//    (include `-moz` to future-proof).
	// 

	@if has_bug(search-element-appearance) {
		input[type="search"] {
			@include _(appearance, textfield); // 1
			@include _(box-sizing, content-box);
		}
	}

	// 
	// Remove inner padding and search cancel button in Safari and Chrome on OS X.
	// Safari (but not Chrome) clips the cancel button when the search input has
	// padding (and `textfield` appearance).
	// 

	@if has_bug(search-cancel-button-appearance) {
		input[type="search"]::webkit-search-cancel-button,
		input[type="search"]::-webkit-search-decoration {
			@include _(appearance, none);
		}
	}

	// 
	// Define consistent border, margin, and padding.
	// 

	@if has_bug(fieldset-inconsistent-appearance) {
		fieldset {
			border: 1px solid #c0c0c0;
			margin: 0 2px;
			padding: 0.35em 0.625em 0.75em;
		}
	}

	// 
	// 1. Correct `color` not being inherited in IE 8/9/10/11.
	// 2. Remove padding so people aren't caught out if they zero out fieldsets.
	// 

	legend {
		@if has_bug(legend-border) {
			border: 0; // 1
		}
		padding: 0; // 2
	}

	// 
	// Remove default vertical scrollbar in IE 8/9/10/11.
	// 

	@if has_bug(textarea-vertical-scrollbar) {
		textarea {
			overflow: auto;
		}
	}

	// 
	// Don't inherit the `font-weight` (applied by a rule above).
	// NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
	// 

	@if has_bug(optgroup-font-weight) {
		optgroup {
			font-weight: bold;
		}
	}

	// Tables
	// ==========================================================================

	// 
	// Remove most spacing between table cells.
	// 

	@if has_bug(table-cell-spacing) {
		table {
			border-collapse: collapse;
			border-spacing: 0;
		}

		td,
		th {
			padding: 0;
		}
	}

	p {
		line-height: $paragraph-line-height;
	}

	@if has_bug(table-border) {
		table {
			border: 0;
		}
	}
}

@mixin clearfix {
	@if capable_of(css-gencontent) {
		&:before, &:after { content: " "; display: table; }
		&:after { clear: both; }
	}
}
